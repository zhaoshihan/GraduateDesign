<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 设置为ICommentDao接口方法提供sql语句配置 -->
<mapper namespace="ssm.dao.ICommentDao">

    <!--    反应数据库comment表select的列名与Bean对象字段的映射关系-->
    <resultMap id="Comment" type="ssm.dao.entity.Comment">
        <result column="content" jdbcType="VARCHAR" property="content" javaType="String"/>
        <result column="grade" jdbcType="TINYINT" property="grade" javaType="byte" />
        <result column="book_id" jdbcType="INTEGER" property="bookID" javaType="long" />
        <result column="user_id" jdbcType="INTEGER" property="memberID" javaType="long" />
    </resultMap>

    <!--    对应在数据库中comment表的各列名称-->
    <sql id="baseCommentColumn">
        comment.content, comment.grade, comment.book_id, comment.user_id
    </sql>

    <select id="getCommentById" resultMap="Comment" parameterType="long">
        SELECT
            <include refid="baseCommentColumn"></include>
        FROM
            comment
        WHERE
                comment.book_id = #{bookId}
            AND
                comment.user_id = #{userId}
    </select>

    <select id="getRelatedCommentsByUserId" resultMap="Comment" parameterType="long">
        SELECT
        <include refid="baseCommentColumn"></include>
        FROM
            comment
        WHERE
            comment.user_id = #{userId}
    </select>

    <insert id="addComment" parameterType="ssm.dao.entity.Comment">
        INSERT INTO
            comment
            (
                content,
                grade,
                book_id,
                user_id
            )
        VALUES
            (
                 #{comment.content},
                 #{comment.grade},
                 #{comment.bookID},
                 #{comment.memberID}
             )
    </insert>


</mapper>
