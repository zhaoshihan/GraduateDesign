<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 设置为IBookDao接口方法提供sql语句配置 -->
<mapper namespace="ssm.dao.IBookDao">

    <!--    反应数据库book表select的列名与Bean对象字段的映射关系-->
    <resultMap id="Book" type="ssm.dao.entity.Book">
        <result column="id" jdbcType="INTEGER" property="id" javaType="long" />
        <result column="bookname" jdbcType="VARCHAR" property="bookname" javaType="String" />
        <result column="author" jdbcType="VARCHAR" property="author" javaType="String" />
        <result column="category" jdbcType="VARCHAR" property="category" javaType="String" />
        <result column="nation" jdbcType="VARCHAR" property="nation" javaType="String" />
        <result column="publish_date" jdbcType="DATE" property="publishDate" javaType="java.sql.Date" />
        <result column="price" jdbcType="DECIMAL" property="price" javaType="java.math.BigDecimal" />
        <result column="description" jdbcType="VARCHAR" property="description" javaType="String" />
<!--        以下两项为Comment表数据计算得到-->
        <result column="avg" jdbcType="DOUBLE" property="averageGrade" javaType="double" />
        <result column="sum" jdbcType="INTEGER" property="commentNumber" javaType="int" />
    </resultMap>

    <sql id="baseBookColumn">
        book.id, book.bookname, book.author, book.category, book.nation, book.publish_date,
        book.price, book.description
    </sql>


    <select id="getBookById" resultMap="Book" parameterType="long">
        SELECT
            <include refid="baseBookColumn"></include>,
            ROUND(AVG(comment.grade), 2) AS 'avg',
            COUNT(comment.book_id) AS 'sum'
        FROM
        (
                book
            LEFT JOIN
                comment
            ON
                book.id = comment.book_id
        )
        WHERE
            book.id = #{id}
        GROUP BY
            book.id
    </select>

    <select id="getAllBooks" resultMap="Book">
        SELECT
            <include refid="baseBookColumn"></include>,
            ROUND(AVG(comment.grade), 2) AS 'avg',
            COUNT(comment.book_id) AS 'sum'
        FROM
        (
                book
            LEFT JOIN
                comment
            ON
                book.id = comment.book_id
        )
        GROUP BY
            book.id
    </select>



<!--    <select id="getMemberById" resultType="ssm.dao.entity.Member" parameterType="int">select * from member where id = #{id}</select>-->
<!--    <select id="getMemberByAccount" resultType="ssm.dao.entity.Member" parameterType="String">select * from member where account = #{account}</select>-->
<!--    <select id="getAllMembers" resultType="ssm.dao.entity.Member">select * from member</select>-->
<!--    <insert id="addMember" parameterType="ssm.dao.entity.Member">insert into member values (#{id}, #{name}, #{gender}, #{city}, #{address}, #{postCode}, #{phoneNumber}, #{email}, #{account}, #{passWord})</insert>-->
<!--    <update id="updateMember" parameterType="ssm.dao.entity.Member">-->
<!--        update member set name = #{name}, gender = #{gender}, city = #{city}, address = #{address},-->
<!--                          postcode = #{postCode}, phonenumber = #{phoneNumber}, email = #{email},-->
<!--                          account = #{account}, passWord = #{passWord}-->
<!--        where id = #{id}-->
<!--    </update>-->
<!--    <delete id="deleteMember" parameterType="ssm.dao.entity.Member">delete from member where id = #{id}</delete>-->

</mapper>
